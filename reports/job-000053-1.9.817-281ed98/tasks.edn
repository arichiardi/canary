({:name "cljs-devtools",
  :description
  "a Clojure function cljs-devtools from canary.projects.binaryage",
  :enabled true,
  :enabled-reason "included by default",
  :color :green,
  :result
  {:status :exception,
   :report
   "```\nException: java.io.IOException: Resetting to invalid mark\n\tat java.io.BufferedInputStream.reset(BufferedInputStream.java:448)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93)\n\tat clojure.lang.Reflector.invokeNoArgInstanceMember(Reflector.java:313)\n\tat canary.runner.shell$reset_stream.invokeStatic(shell.clj:43)\n\tat canary.runner.shell$reset_stream.invoke(shell.clj:41)\n\tat clojure.core$partial$fn__4759.invoke(core.clj:2515)\n\tat me.raynes.conch.low_level$stream_to.invokeStatic(low_level.clj:79)\n\tat me.raynes.conch.low_level$stream_to.doInvoke(low_level.clj:73)\n\tat clojure.lang.RestFn.invoke(RestFn.java:445)\n\tat clojure.lang.AFn.applyToHelper(AFn.java:160)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:132)\n\tat clojure.core$apply.invokeStatic(core.clj:652)\n\tat clojure.core$apply.invoke(core.clj:641)\n\tat me.raynes.conch.low_level$stream_to_string.invokeStatic(low_level.clj:95)\n\tat me.raynes.conch.low_level$stream_to_string.doInvoke(low_level.clj:91)\n\tat clojure.lang.RestFn.invoke(RestFn.java:425)\n\tat canary.runner.shell$extract_outputs.invokeStatic(shell.clj:49)\n\tat canary.runner.shell$extract_outputs.invoke(shell.clj:46)\n\tat canary.runner.shell$launch_BANG_.invokeStatic(shell.clj:71)\n\tat canary.runner.shell$launch_BANG_.doInvoke(shell.clj:65)\n\tat clojure.lang.RestFn.invoke(RestFn.java:425)\n\tat canary.runner.travis$launch_BANG_.invokeStatic(travis.clj:133)\n\tat canary.runner.travis$launch_BANG_.invoke(travis.clj:130)\n\tat canary.runner.travis$talk_to_travis_api_BANG_.invokeStatic(travis.clj:153)\n\tat canary.runner.travis$talk_to_travis_api_BANG_.invoke(travis.clj:152)\n\tat canary.runner.travis$post_to_travis_api_BANG_.invokeStatic(travis.clj:170)\n\tat canary.runner.travis$post_to_travis_api_BANG_.invoke(travis.clj:163)\n\tat canary.runner.travis$trigger_build_BANG_.invokeStatic(travis.clj:196)\n\tat canary.runner.travis$trigger_build_BANG_.invoke(travis.clj:184)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invokeStatic(travis.clj:334)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invoke(travis.clj:333)\n\tat canary.runner.travis$request_build_BANG_.invokeStatic(travis.clj:350)\n\tat canary.runner.travis$request_build_BANG_.invoke(travis.clj:346)\n\tat canary.projects.binaryage$cljs_devtools.invokeStatic(binaryage.clj:5)\n\tat canary.projects.binaryage$cljs_devtools.invoke(binaryage.clj:4)\n\tat canary.runner.jobs$execute_task_BANG_.invokeStatic(jobs.clj:24)\n\tat canary.runner.jobs$execute_task_BANG_.invoke(jobs.clj:21)\n\tat canary.runner.jobs$run_task_BANG_.invokeStatic(jobs.clj:29)\n\tat canary.runner.jobs$run_task_BANG_.invoke(jobs.clj:26)\n\tat canary.runner.jobs$try_run_task_BANG_.invokeStatic(jobs.clj:34)\n\tat canary.runner.jobs$try_run_task_BANG_.invoke(jobs.clj:31)\n\tat canary.runner.jobs$spawn_task_BANG_$fn__9655.invoke(jobs.clj:44)\n\tat clojure.core.async$thread_call$fn__6061.invoke(async.clj:442)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:748)\n\n```"}}
 {:name "planck",
  :description "a Clojure function planck from canary.projects.mfikes",
  :enabled true,
  :enabled-reason "included by default",
  :color :blue,
  :result
  {:status :exception,
   :report
   "```\nException: java.io.IOException: Resetting to invalid mark\n\tat java.io.BufferedInputStream.reset(BufferedInputStream.java:448)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93)\n\tat clojure.lang.Reflector.invokeNoArgInstanceMember(Reflector.java:313)\n\tat canary.runner.shell$reset_stream.invokeStatic(shell.clj:43)\n\tat canary.runner.shell$reset_stream.invoke(shell.clj:41)\n\tat clojure.core$partial$fn__4759.invoke(core.clj:2515)\n\tat me.raynes.conch.low_level$stream_to.invokeStatic(low_level.clj:79)\n\tat me.raynes.conch.low_level$stream_to.doInvoke(low_level.clj:73)\n\tat clojure.lang.RestFn.invoke(RestFn.java:445)\n\tat clojure.lang.AFn.applyToHelper(AFn.java:160)\n\tat clojure.lang.RestFn.applyTo(RestFn.java:132)\n\tat clojure.core$apply.invokeStatic(core.clj:652)\n\tat clojure.core$apply.invoke(core.clj:641)\n\tat me.raynes.conch.low_level$stream_to_string.invokeStatic(low_level.clj:95)\n\tat me.raynes.conch.low_level$stream_to_string.doInvoke(low_level.clj:91)\n\tat clojure.lang.RestFn.invoke(RestFn.java:425)\n\tat canary.runner.shell$extract_outputs.invokeStatic(shell.clj:49)\n\tat canary.runner.shell$extract_outputs.invoke(shell.clj:46)\n\tat canary.runner.shell$launch_BANG_.invokeStatic(shell.clj:71)\n\tat canary.runner.shell$launch_BANG_.doInvoke(shell.clj:65)\n\tat clojure.lang.RestFn.invoke(RestFn.java:425)\n\tat canary.runner.travis$launch_BANG_.invokeStatic(travis.clj:133)\n\tat canary.runner.travis$launch_BANG_.invoke(travis.clj:130)\n\tat canary.runner.travis$talk_to_travis_api_BANG_.invokeStatic(travis.clj:153)\n\tat canary.runner.travis$talk_to_travis_api_BANG_.invoke(travis.clj:152)\n\tat canary.runner.travis$post_to_travis_api_BANG_.invokeStatic(travis.clj:170)\n\tat canary.runner.travis$post_to_travis_api_BANG_.invoke(travis.clj:163)\n\tat canary.runner.travis$trigger_build_BANG_.invokeStatic(travis.clj:196)\n\tat canary.runner.travis$trigger_build_BANG_.invoke(travis.clj:184)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invokeStatic(travis.clj:334)\n\tat canary.runner.travis$request_build_and_wait_for_results_BANG_.invoke(travis.clj:333)\n\tat canary.runner.travis$request_build_BANG_.invokeStatic(travis.clj:350)\n\tat canary.runner.travis$request_build_BANG_.invoke(travis.clj:346)\n\tat canary.projects.mfikes$planck.invokeStatic(mfikes.clj:5)\n\tat canary.projects.mfikes$planck.invoke(mfikes.clj:4)\n\tat canary.runner.jobs$execute_task_BANG_.invokeStatic(jobs.clj:24)\n\tat canary.runner.jobs$execute_task_BANG_.invoke(jobs.clj:21)\n\tat canary.runner.jobs$run_task_BANG_.invokeStatic(jobs.clj:29)\n\tat canary.runner.jobs$run_task_BANG_.invoke(jobs.clj:26)\n\tat canary.runner.jobs$try_run_task_BANG_.invokeStatic(jobs.clj:34)\n\tat canary.runner.jobs$try_run_task_BANG_.invoke(jobs.clj:31)\n\tat canary.runner.jobs$spawn_task_BANG_$fn__9655.invoke(jobs.clj:44)\n\tat clojure.core.async$thread_call$fn__6061.invoke(async.clj:442)\n\tat clojure.lang.AFn.run(AFn.java:22)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:748)\n\n```"}})
